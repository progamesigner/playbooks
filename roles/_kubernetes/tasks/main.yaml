# - name: Add cri-o repository
#   yum_repository:
#     name: crio
#     description: CRI-O
#     baseurl: https://cbs.centos.org/repos/paas7-crio-114-candidate/x86_64/os
#     gpgcheck: no

# - name: Add kubernetes repository
#   yum_repository:
#     name: kubernetes
#     description: Kubernetes
#     baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
#     gpgcheck: yes
#     gpgkey:
#     - https://packages.cloud.google.com/yum/doc/yum-key.gpg
#     - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

# - name: Upgrade packages
#   yum:
#     name: "*"
#     state: latest

# - name: Install packages
#   yum:
#     name:
#     - cri-o
#     - kubeadm
#     - kubectl
#     - kubelet
#     state: present

# - name: Enable kernel modules
#   copy:
#     src: modules.conf
#     dest: /etc/modules-load.d/99-kubernetes-cri.conf

# - name: Enable sysctl options
#   copy:
#     src: sysctl.conf
#     dest: /etc/sysctl.d/99-kubernetes-cri.conf

# - name: Enable cgroups for kubelet
#   copy:
#     src: cgroups.conf
#     dest: /usr/lib/systemd/system/kubelet.service.d/50-cgroups.conf

# - name: Put selinux in permissive mode
#   selinux:
#     policy: targeted
#     state: permissive

# - name: Patch cri-o systemd scripts
#   get_url:
#     url: https://raw.githubusercontent.com/cri-o/cri-o/master/contrib/crio-wipe/lib.bash
#     dest: /usr/libexec/crio/crio-wipe/lib.bash
#     mode: 0755
#     force: yes

# - name: Upload kubernetes manifests
#   template:
#     src: "{{ item }}.yaml.j2"
#     dest: "/etc/kubernetes/{{ item }}.yaml"
#     mode: 0644
#   with_items:
#   - kubeadm-config
#   - kube-router

# - name: Reboot
#   reboot:

# - name: Start cri-o & kubelet
#   systemd:
#     name: "{{ item }}"
#     state: started
#     enabled: yes
#     no_block: yes
#   with_items:
#   - crio
#   - kubelet





# - name: Kubernetes | Remove previous k3s
#   file:
#     path: /usr/local/bin/k3s
#     state: absent

# - name: Kubernetes | Download k3s (x86_64)
#   get_url:
#     url: https://github.com/rancher/k3s/releases/download/{{ k3s_version }}/k3s
#     dest: /usr/local/bin/k3s
#     owner: root
#     group: root
#     mode: 755
#   when: ansible_facts['architecture'] == 'x86_64'

# - name: Kubernetes | Download k3s (arm64)
#   get_url:
#     url: https://github.com/rancher/k3s/releases/download/{{ k3s_version }}/k3s-arm64
#     dest: /usr/local/bin/k3s
#     owner: root
#     group: root
#     mode: 755
#   when: ansible_facts['architecture'] is search('arm') and ansible_facts['userspace_bits'] == '64'

# - name: Kubernetes | Download k3s (armhf)
#   get_url:
#     url: https://github.com/rancher/k3s/releases/download/{{ k3s_version }}/k3s-armhf
#     dest: /usr/local/bin/k3s
#     owner: root
#     group: root
#     mode: 755
#   when: ansible_facts['architecture'] is search('arm') and ansible_facts['userspace_bits'] == '32'
